    <Window x:Class="EasyHabit.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:oxy="http://oxyplot.org/wpf"
        xmlns:local="clr-namespace:EasyHabit.User_Controls"
        mc:Ignorable="d"
        Title="Main_Window" Height="1024" Width="1240">

    <Window.Resources>

        <Style TargetType="Rectangle" x:Key="AddShadowRectangle">
            <Setter Property="BitmapEffect">
                <Setter.Value>
                    <DropShadowBitmapEffect Direction="0" Softness="50" Color="Gray" ShadowDepth="0"/>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="TextBox" x:Key="AllText">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="False"/>
            <Setter Property="Cursor" Value="Arrow"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border 
          Name="Border"
          CornerRadius="0" 
          Padding="2"
          Background="Transparent"
          BorderBrush="Teal"
          BorderThickness="0" >
                            <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="Blue"/>
                                <Setter TargetName="Border" Property="BorderBrush" Value="Black"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                                <Setter TargetName="Border" Property="BorderBrush" Value="Teal"/>
                                <Setter Property="Foreground" Value="Black"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="AllButton1" TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" 
                            BorderThickness="1.5"
                            Padding="0" 
                            BorderBrush="Transparent" 
                            CornerRadius="0" 
                            Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                                <Setter TargetName="border" Property="BorderThickness" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                                <Setter TargetName="border" Property="BorderThickness" Value="3"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="AllButtonCircleUncompleted" TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" 
                            BorderThickness="1"
                            Padding="0" 
                            BorderBrush="Transparent" 
                            CornerRadius="0" 
                            Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                                <Setter TargetName="border" Property="BorderThickness" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                                <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="TextBox" x:Key="Header" BasedOn="{StaticResource AllText}">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="Background" Value="Transparent"/>
        </Style>

        <Style TargetType="Ellipse" x:Key="OuterCircle">
            <Setter Property="Height" Value="29"/>
            <Setter Property="Width" Value="29"/>
            <Setter Property="Fill" Value="White"/>
        </Style>

        <Style TargetType="Ellipse" x:Key="innerCompletedCircle">
            <Setter Property="Height" Value="18"/>
            <Setter Property="Width" Value="18"/>
            <Setter Property="Fill" Value="LightGreen"/>
        </Style>

        <Style TargetType="Ellipse" x:Key="InnerUncompletedCircle">
            <Setter Property="Height" Value="12"/>
            <Setter Property="Width" Value="12"/>
            <Setter Property="Stroke" Value="Black"/>
            <Setter Property="Fill" Value="White"/>
            <Setter Property="StrokeThickness" Value="0.7"/>
        </Style>

        <ControlTemplate x:Key="IncompleteCircles" TargetType="{x:Type Button}">
            <Grid>
                <Ellipse Style="{StaticResource OuterCircle}" x:Name="theEllipse"/>
                <Ellipse Style="{StaticResource InnerUncompletedCircle}"/>
                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Fill" Value="White" TargetName="theEllipse"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Fill" Value="Gray" TargetName="theEllipse"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="CompleteCircles" TargetType="{x:Type Button}" >
            <Grid>
                <Ellipse Style="{StaticResource OuterCircle}" x:Name="theEllipse"/>
                <Ellipse Style="{StaticResource innerCompletedCircle}"/>
                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Fill" Value="White" TargetName="theEllipse"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Fill" Value="Gray" TargetName="theEllipse"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style BasedOn="{StaticResource AllText}" TargetType="TextBox" x:Key="EditBox">
            <Setter Property="IsReadOnly" Value="False"/>
            <Setter Property="Focusable" Value="True"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Foreground" Value="LightGray"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        
        
<!-- Toggles Start Here -->
        
        <ControlTemplate x:Key="ToggleCompleteCircles" TargetType="{x:Type ToggleButton}" >
            <Grid>
                <Ellipse Style="{StaticResource OuterCircle}" x:Name="theEllipse"/>
                <Ellipse Style="{StaticResource innerCompletedCircle}"/>
                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Fill" Value="White" TargetName="theEllipse"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Fill" Value="Gray" TargetName="theEllipse"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="ToggleIncompleteCircles" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Ellipse Style="{StaticResource OuterCircle}" x:Name="OuterEllipse"/>
                <Ellipse Style="{StaticResource InnerUncompletedCircle}" x:Name="InnerEllipse"/>
                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Fill" Value="White" TargetName="OuterEllipse"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Fill" Value="Gray" TargetName="OuterEllipse"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Style" Value="{StaticResource innerCompletedCircle}" TargetName="InnerEllipse"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="Style" Value="{StaticResource InnerUncompletedCircle}" TargetName="InnerEllipse"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="AllToggleButton1" TargetType="ToggleButton">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" 
                            BorderThickness="1.5"
                            Padding="0" 
                            BorderBrush="Transparent" 
                            CornerRadius="0" 
                            Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                                <Setter TargetName="border" Property="BorderThickness" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                                <Setter TargetName="border" Property="BorderThickness" Value="3"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="AllToggleButtonCircleUncompleted" TargetType="ToggleButton">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" 
                            BorderThickness="1"
                            Padding="0" 
                            BorderBrush="Transparent" 
                            CornerRadius="0" 
                            Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                                <Setter TargetName="border" Property="BorderThickness" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                                <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- And ToggleButtons end here -->
        
        <!-- Quickstats Variations Start here -->

        <Style x:Key="QSiio" TargetType="Rectangle">
            <Setter Property="Fill" Value="#FFADADAD"/>
            <Setter Property="Width" Value="11"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="Stroke" Value="#FF656565"/>
            <Setter Property="StrokeThickness" Value="2"/>
        </Style>

        <Style BasedOn="{StaticResource QSiio}" x:Key="QS10" TargetType="Rectangle">
            <Setter Property="Height" Value="7"/>
            <Setter Property="Fill" Value="Red"/>
        </Style>

        <Style x:Key="QS25" TargetType="Rectangle" BasedOn="{StaticResource QSiio}">
            <Setter Property="Height" Value="12.5"/>
            <Setter Property="Fill" Value="OrangeRed"/>
        </Style>

        <Style x:Key="QS50" TargetType="Rectangle" BasedOn="{StaticResource QSiio}">
            <Setter Property="Height" Value="25"/>
            <Setter Property="Fill" Value="Orange"/>
        </Style>

        <Style x:Key="QS75" TargetType="Rectangle" BasedOn="{StaticResource QSiio}">
            <Setter Property="Height" Value="37"/>
            <Setter Property="Fill" Value="Yellow"/>
        </Style>

        <Style x:Key="QS100" TargetType="Rectangle" BasedOn="{StaticResource QSiio}">
            <Setter Property="Height" Value="50"/>
            <Setter Property="Fill" Value="LightGreen"/>
        </Style>

        <!-- And end here -->

        <Style TargetType="ListViewItem">
            <Setter Property="Height" Value="70" />
            <Setter Property="Visibility" Value="Visible"/>
            <Setter Property="MinWidth" Value="250" />
            <Setter Property="Background" Value="#262626" />
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Margin" Value="5,0,0,25"/>
            <Setter Property="BitmapEffect">
                <Setter.Value>
                    <DropShadowBitmapEffect Direction="0" Softness="50" Color="Gray" ShadowDepth="0"/>
                </Setter.Value>
            </Setter>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border Name="Root" BorderThickness="2, 0, 6, 0" BorderBrush="Transparent">
                            <Grid Background="{TemplateBinding Background}">
                                <Border Name="Selection" Visibility="Visible" BorderThickness="0" BorderBrush="Transparent">
                                    <ContentPresenter/>
                                </Border>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Root" Property="BorderBrush" Value="Transparent"/>
                                <Setter TargetName="Root" Property="BorderThickness" Value="0, 0, 4, 0"/>
                                <Setter TargetName="Selection" Property="BorderThickness" Value="0"/>
                                <Setter Property="BitmapEffect">
                                    <Setter.Value>
                                        <DropShadowBitmapEffect  Direction="0" Softness="50" Color="Gray" ShadowDepth="0"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Selection" Property="BorderThickness" Value="0"/>
                                <Setter TargetName="Root" Property="BorderThickness" Value="0, 0, 4, 0"/>
                                <Setter TargetName="Root" Property="BorderBrush" Value="Blue"/>
                                <Setter Property="BitmapEffect">
                                    <Setter.Value>
                                        <DropShadowBitmapEffect  Direction="0" Softness="100" Color="Gray" ShadowDepth="0"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="ListViewItemTeplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="40*"/>
                    <ColumnDefinition Width="270*"/>
                    <ColumnDefinition Width="280*"/>
                </Grid.ColumnDefinitions>


                <Grid Grid.Column="0" Name="QuickStat" VerticalAlignment="Center">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <Rectangle Style="{StaticResource QSiio}"/>
                    <Rectangle Style="{StaticResource QS75}" VerticalAlignment="Bottom"/>
                </Grid>

                <Grid Grid.Column="1">
                    <TextBox Text="{Binding habitName}" FontSize="20" Background="Transparent" HorizontalAlignment="Left" Foreground="White" VerticalAlignment="Center" Style="{StaticResource AllText}"/>
                </Grid>

                <Grid Grid.Column="2" Margin="0,0,12,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="5*"/>
                        <ColumnDefinition Width="4*"/>
                        <ColumnDefinition Width="5*"/>
                        <ColumnDefinition Width="4*"/>
                        <ColumnDefinition Width="5*"/>
                        <ColumnDefinition Width="4*"/>
                        <ColumnDefinition Width="5*"/>
                        <ColumnDefinition Width="4*"/>
                        <ColumnDefinition Width="5*"/>
                    </Grid.ColumnDefinitions>

                    <ToggleButton Grid.Column="0" Template="{StaticResource ToggleIncompleteCircles}" IsChecked="{Binding minus0, Mode=TwoWay}"/>
                    <ToggleButton Grid.Column="2" Template="{StaticResource ToggleIncompleteCircles}" IsChecked="{Binding minus1, Mode=TwoWay}"/>
                    <ToggleButton Grid.Column="4" Template="{StaticResource ToggleIncompleteCircles}" IsChecked="{Binding minus2, Mode=TwoWay}"/>
                    <ToggleButton Grid.Column="6" Template="{StaticResource ToggleIncompleteCircles}" IsChecked="{Binding minus3, Mode=TwoWay}"/>
                    <ToggleButton Grid.Column="8" Template="{StaticResource ToggleIncompleteCircles}" IsChecked="{Binding minus4, Mode=TwoWay}"/>
                </Grid>
            </Grid>
        </DataTemplate>
    </Window.Resources>
    
        <Grid Name="All">
        <Grid.Background>
            <ImageBrush ImageSource="/supply/easybackground.png" Stretch="UniformToFill" Opacity="0.7"/>
        </Grid.Background>
        <Grid.RowDefinitions>
            <RowDefinition Height="60*" MinHeight="60"/>
            <RowDefinition Height="964*"/>
        </Grid.RowDefinitions>
            
        <Grid Grid.Row="0" Name="Upper_Panel">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="210*" MinWidth="210"/>
                <ColumnDefinition Width="1030*"/>
            </Grid.ColumnDefinitions>

            <Rectangle Grid.Column="0" Grid.ColumnSpan="2" Fill="#262626" Style="{StaticResource AddShadowRectangle}"/>

            <Grid Grid.Column="0" Margin="20,0,0,0" Name="Upper_and_controls">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="55"/>
                    <ColumnDefinition Width="55"/>
                    <ColumnDefinition Width="55"/>
                </Grid.ColumnDefinitions>
                
                <Button Grid.Column="0" Width="40" Height="40" Style="{StaticResource AllButton1}" Click="AddBtn_Click">
                    <Button.Background>
                        <ImageBrush ImageSource="\supply\easyhabit_plus_button.png" Opacity="1"/>
                    </Button.Background>
                </Button>

                <Button x:Name="BtnSort" Grid.Column="1" Width="40" Height="40" Style="{StaticResource AllButton1}" Click="BtnSort_Clk">
                    <Button.Background>
                        <ImageBrush ImageSource="\supply\easyhabit_sort_button.png" Opacity="1"/>
                    </Button.Background>
                </Button>

                <Button Grid.Column="2" Width="40" Height="40" Style="{StaticResource AllButton1}" Click="deleteBtn_Click">
                    <Button.Background>
                        <ImageBrush ImageSource="\supply\easyhabit_minus_button.png" Opacity="1"/>
                    </Button.Background>
                </Button>
            </Grid>
            
            <TextBox Grid.Column="1" Margin="0, 0,200,0" Text="EasyHabit" Foreground="White" FontWeight="Bold" Style="{StaticResource Header}" HorizontalAlignment="Center"/>
            
        </Grid>
            
        <Grid Grid.Row="1" Name="Main_Panel" MinHeight="400" MinWidth="400">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>       <!-- MinWidth Required -->
                <ColumnDefinition Width="1"/>
                <ColumnDefinition Width="*"/>       <!-- MinWidth Required -->
            </Grid.ColumnDefinitions>

            <Line X1="0" X2="0" Y1="0" Y2="3024" Stroke="#262626" StrokeThickness="1" Grid.Row="0" Grid.Column="1"/>

            <Grid Grid.Column="0" Name="LeftMain" MinWidth="600" MinHeight="500">
                <Grid.RowDefinitions>
                    <RowDefinition Height="110*"/>
                    <RowDefinition Height="600*"/>
                </Grid.RowDefinitions>

                <Grid Grid.Row="0" Name="Current_day_and_Qhistory">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="310*"/>
                        <ColumnDefinition Width="310*"/>
                    </Grid.ColumnDefinitions>

                    <Label Content="{Binding day0}" Grid.Column="0" x:Name="labelCurrentDate" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="20, 0, 0, 0">
                        <Label.ContentTemplate>
                            <DataTemplate>
                                <TextBox Grid.Row="0" Text="{Binding fullDay}" Style="{StaticResource Header}" FontSize="22"/>
                            </DataTemplate>
                        </Label.ContentTemplate>
                    </Label>

                    <Grid Grid.Column="1" Name="Quick_history" Margin="0,0,14,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <!-- Week Days -->
                        <Label Content="{Binding day0}" Grid.Row="0" Grid.Column="0" x:Name="labelWeek0" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <Label.ContentTemplate>
                                <DataTemplate>
                                    <TextBox Text="{Binding week}" Style="{StaticResource Header}" FontSize="21"/>
                                </DataTemplate>
                            </Label.ContentTemplate>
                        </Label>

                        <Label Content="{Binding day1}" Grid.Row="0" Grid.Column="1" x:Name="labelWeek1" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <Label.ContentTemplate>
                                <DataTemplate>
                                    <TextBox Text="{Binding week}" Style="{StaticResource Header}" FontSize="21"/>
                                </DataTemplate>
                            </Label.ContentTemplate>
                        </Label>

                        <Label Content="{Binding day2}" Grid.Row="0" Grid.Column="2" x:Name="labelWeek2" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <Label.ContentTemplate>
                                <DataTemplate>
                                    <TextBox Text="{Binding week}" Style="{StaticResource Header}" FontSize="21"/>
                                </DataTemplate>
                            </Label.ContentTemplate>
                        </Label>

                        <Label Content="{Binding day3}" Grid.Row="0" Grid.Column="3" x:Name="labelWeek3" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <Label.ContentTemplate>
                                <DataTemplate>
                                    <TextBox Text="{Binding week}" Style="{StaticResource Header}" FontSize="21"/>
                                </DataTemplate>
                            </Label.ContentTemplate>
                        </Label>

                        <Label Content="{Binding day4}" Grid.Row="0" Grid.Column="4" x:Name="labelWeek4" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <Label.ContentTemplate>
                                <DataTemplate>
                                    <TextBox Text="{Binding week}" Style="{StaticResource Header}" FontSize="21"/>
                                </DataTemplate>
                            </Label.ContentTemplate>
                        </Label>
                        <!-- ... -->
                        <!-- Number Days -->
                        <Label Content="{Binding day0}" Grid.Column="0" Grid.Row="1" x:Name="labelDay0" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <Label.ContentTemplate>
                                <DataTemplate>
                                    <TextBox Text="{Binding day}" Style="{StaticResource Header}" FontSize="24"/>
                                </DataTemplate>
                            </Label.ContentTemplate>
                        </Label>
                        <Label Content="{Binding day1}" Grid.Column="1" Grid.Row="1" x:Name="labelDay1" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <Label.ContentTemplate>
                                <DataTemplate>
                                    <TextBox Text="{Binding day}" Style="{StaticResource Header}" FontSize="24"/>
                                </DataTemplate>
                            </Label.ContentTemplate>
                        </Label>
                        <Label Content="{Binding day2}" Grid.Column="2" Grid.Row="1" x:Name="labelDay2" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <Label.ContentTemplate>
                                <DataTemplate>
                                    <TextBox Text="{Binding day}" Style="{StaticResource Header}" FontSize="24"/>
                                </DataTemplate>
                            </Label.ContentTemplate>
                        </Label>
                        <Label Content="{Binding day3}" Grid.Column="3" Grid.Row="1" x:Name="labelDay3" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <Label.ContentTemplate>
                                <DataTemplate>
                                    <TextBox Text="{Binding day}" Style="{StaticResource Header}" FontSize="24"/>
                                </DataTemplate>
                            </Label.ContentTemplate>
                        </Label>
                        <Label Content="{Binding day4}" Grid.Column="4" Grid.Row="1" x:Name="labelDay4" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <Label.ContentTemplate>
                                <DataTemplate>
                                    <TextBox Text="{Binding day}" Style="{StaticResource Header}" FontSize="24"/>
                                </DataTemplate>
                            </Label.ContentTemplate>
                        </Label>
                        <!-- ... -->
                    </Grid>
                </Grid>

                <ListView Grid.Row="1"
                          MinWidth="270"
                          SelectionMode="Single"
                          x:Name="ListofHabits"
                          Background="Transparent"
                          BorderThickness="0"
                          Padding="0, 10, 0, 0"
                          ScrollViewer.VerticalScrollBarVisibility="Disabled"
                          ItemsSource="{Binding listOfHabitModels}"
                          ItemTemplate="{StaticResource ListViewItemTeplate}">
                </ListView>
            </Grid>
            
            <Grid Grid.Column="2" Name="RightMain" MinWidth="500" MinHeight="500">
                <Grid.RowDefinitions>
                    <RowDefinition Height="64"/>
                    <RowDefinition Height="10"/>
                    <RowDefinition Height="80"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="80"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                
                <Rectangle Fill="White" Grid.RowSpan="1" MaxWidth="550" Style="{StaticResource AddShadowRectangle}"/>

                <Grid Grid.Row="0" Grid.RowSpan="1" MaxWidth="520">
                    <TextBox Name="nameTxtBox" Style="{StaticResource EditBox}" Foreground="LightGray" Text="TextBox"  GotFocus="nameTxtBox_GotFocus" MaxWidth="400"/>
                    <Button x:Name="Rewrite_Btn" Grid.Column="1" Grid.Row="0" Width="40" Height="40" Style="{StaticResource AllButton1}" Click="RenameBtn_Click" HorizontalAlignment="Right">
                        <Button.Background>
                            <ImageBrush ImageSource="\supply\pencilnew.png" Opacity="1"/>
                        </Button.Background>
                    </Button>
                </Grid>

                <Rectangle Grid.Row="1" Fill="Blue" MaxWidth="556"/>

                <TextBox Grid.Row="2" Text="Progress of Habit formation" Style="{StaticResource Header}"/>
                <TextBox Grid.Row="4" Text="History of Habit formation" Style="{StaticResource Header}"/>
<!-- OxyPlot -->
                <oxy:PlotView Background="Transparent" x:Name="progresPlot" Grid.Row="3" Opacity="1" Margin="10, 0, 10, 0"/>

                <Viewbox Grid.Row="5">
                    <Calendar Background="Transparent" BorderBrush="Transparent">
                    </Calendar>
                </Viewbox>
            </Grid>
        </Grid>
    </Grid>
</Window>
